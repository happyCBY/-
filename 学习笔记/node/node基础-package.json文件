Node（软件）是基于chrome v8引擎的javascript的运行环境

node的全局对象是global,类似dom里面的document和bom里面的window

javascript开发中的弊端：
1.文件依赖
一个文件依赖另一个文件，例如bootstrap文件依赖jquery文件
2.命名冲突
后面的相同的变量名或者方法名会将前面的覆盖掉
============================================================
Node编程

package.json： 项目描述文件，记录当前项目信息，例如项目名称、版本、作者、github地址、当前项目依赖了哪些第三方模块，目的是方便他人了解项目信息，下载项目依赖文件，该文件一般被放置在项目的根目录下，使用npm init -y命令生成。
name: 项目的名称
version: 项目的版本
description: 项目的描述，通过这个可以让别快速的了解到项目的功能和作用
main: 项目的主入口文件
scripts: 设置命令的别名
例如:
scripts:{
    "build": "nodemon app.js"
}
执行别名命令: npm run build
keywords: 关键字，允许我们用关键字来描述项目
author: 项目的作者
license: 项目遵循的协议，默认是"ISC"协议（开发源代码协议）


package-lock.json： 记录下载的包的版本和各种包之间的依赖关系
作用1:锁定包的版本，确保再次下载的时候不会出现版本不一样的问题
作用2:加快下载速度，文件中已经记录了项目依赖的第三方包的树状结构图和下载地址，重装时只需要下载即可

##### 项目依赖

在项目的开发阶段和线上运营阶段，都需要依赖的第三方包，称为项目依赖，例如jquery,bootstrap;

使用`npm install 包名`命令下载的文件会默认被添加到package.json文件的dependencies字段中。

##### 开发依赖

在项目的开发阶段需要依赖，线上运营阶段不需要依赖的第三方包，称为开发依赖,比如gulp

使用`npm install 包名 --save-dev`命令将包添加到package.json文件的devDependencies字段中。

##### 为什么记录依赖项

1. Node.js中下载的第三方包文件拥有非常多的细碎文件，将项目通过移动硬盘传递给别人时传输速度非常慢.
2. 使用git工具管理项目时，不希望git管理node_modules文件夹，也不会将其上传到github中.

当其他人获取到项目时，可以在项目根目录下执行`npm install` 命令，npm工具会自动去package.json文件中查找项目依赖文件并下载，下载包括项目依赖和开发依赖

1. 当项目上线以后，可以直接运行`npm install --production`下载项目依赖，避免下载项目开发依赖。