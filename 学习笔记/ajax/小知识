1.Object.assign(参数1，参数2); 如果参数1中的属性具有和参数2相同的键，则参数1的那个属性将被参数2中的属性覆盖。

2.设置--> 用户代码片段 --> javascript-->javascript.json文件

"提示代码注释": {
	  "prefix": "目标代码简写",
	  "body": [
		输入的内容
	  ],
	  "description": "mongodb连接数据库"
	}
例:
"ajax": {
    "prefix": "ajax",
    "body": [
        "$.ajax({",
		"\ttype:'get',//get或post",
		"\turl:'$1',//请求的地址",
		"\tdata:{},//如果不需要传，则注释掉 请求的参数，a=1&b=2或{a:1,b:2}或者jq中的serialize方法，或者formData收集",
		"\tdataType:'json',",
		"\tsuccess:function(result){//成功的回调函数",
		"\t\tconsole.log(result)",
		"\t}",
		"})"
    ]
}

当你输入ajax的时候，代码提示框里面有你写的prefix中 ajax简写值，点击回车就会把body里面你定义的内容输出

3.confirm("提示信息")，类似alert的提示框，点击确定时返回true,点击取消时返回false

4.location.reload() 重新刷新页面

5.$(Dom对象).filter(筛选条件)  筛选Dom对象
筛选条件:
1、:checked  把具有这个属性的Don对象选出来
2、.add 把具有这个类名的Dom对象选出来

6.RegExp对象的用法
new RegExp(pattern, attributes);

参数 pattern 是一个字符串，指定了正则表达式的模式或其他正则表达式。

参数 attributes 是一个可选的字符串，包含属性 "g"、"i" 和 "m"，分别用于指定全局匹配、区分大小写的匹配和多行匹配。ECMAScript 标准化之前，不支持 m 属性。如果 pattern 是正则表达式，而不是字符串，则必须省略该参数。

返回值
一个新的 RegExp 对象，具有指定的模式和标志。如果参数 pattern 是正则表达式而不是字符串，那么 RegExp() 构造函数将用与指定的 RegExp 相同的模式和标志创建一个新的 RegExp 对象。

如果不用 new 运算符，而将 RegExp() 作为函数调用，那么它的行为与用 new 运算符调用时一样，只是当 pattern 是正则表达式时，它只返回 pattern，而不再创建一个新的 RegExp 对象。

抛出
SyntaxError - 如果 pattern 不是合法的正则表达式，或 attributes 含有 "g"、"i" 和 "m" 之外的字符，抛出该异常。

TypeError - 如果 pattern 是 RegExp 对象，但没有省略 attributes 参数，抛出该异常。