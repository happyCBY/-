### 5.0移动端常见布局



移动端单独制作

- 流式布局（百分比布局）
- flex 弹性布局（强烈推荐）
- less+rem+媒体查询布局
- 混合布局

响应式

- 媒体查询
- bootstarp

流式布局：

流式布局，就是百分比布局，也称非固定像素布局。

通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。

流式布局方式是移动web开发使用的比较常见的布局方式。




display: flex 伸缩布局模式

参考网址
http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html

min-width:xpx  宽缩到xpx时不再缩放
max-width:xxp 宽放大到xpx时不再放大
flex-direction: row|column;
flex-direction: row-reverse|column-reverse; 设置伸缩布局是以行排列分还是以列排列分 row(行),column(列)默认水平排列 ,row-reverse水平反转排列(原本是123排列，设置后变成321排列)column-reverse垂直反转排列


justify-content: 调整主轴水平对齐、
值:
flex-start:默认值，项目位于容器的开头，让子元素从父容器的开头排序
flex-end  项目位于容器的结尾，让子元素从父容器的后面排序 盒子顺序不变
center 项目位于容器的中心，让子元素在父亲中间显示
space-between 项目位于各行之间留有空白容器内，左右盒子贴近父盒子，中间的平均分布空白间距
space-around 项目位于各行之前、之间、之后都留有空白的容器内，相当于给每个盒子添加左右margin外边距(先把大盒子等分，然后每个小盒子居于等分盒子的中间)


align-items: 调整垂直水平对齐、(适用于单行情况下)
值:(变为垂直方向这样排列)
flex-start:默认值，项目位于容器的开头，让子元素从父容器的开头排序
flex-end  项目位于容器的结尾，让子元素从父容器的后面排序 盒子顺序不变
center 项目位于容器的中心，让子元素在父亲中间显示
stretch:默认值 项目被拉伸以适应容器，让子元素拉伸适用于父元素(子元素不给高度的情况下)

align-content: 调节侧轴水平对齐(单行下没有用，适用于多行情况下)
值:
flex-start:默认值，项目位于容器的开头，让子元素从父容器的开头排序
flex-end  项目位于容器的结尾，让子元素从父容器的后面排序 盒子顺序不变
center 项目位于容器的中心，让子元素在父亲中间显示
space-between 项目位于各行之间留有空白容器内，左右盒子贴近父盒子，中间的平均分布空白间距
space-around 项目位于各行之前、之间、之后都留有空白的容器内，相当于给每个盒子添加左右margin外边距(先把大盒子等分，然后每个小盒子居于等分盒子的中间)



flex-wrap控制是否换行
值:
nowrap: 默认值，规定灵活的项目不拆行，或者不拆列，不换行则收缩显示，强制一行内显示
wrap: 规定灵活的项目在必要的时候拆行或者拆列
wrap-reverse: 规定灵活的项目在必要的时候x拆行或者拆列，但是是以相反的顺序



flex-flow是flex-direction flex-wrap的简写形式
flex-flow: flex-direction flex-wrap;


子项常见属性:
flex: 定义子项目分配剩余空间，用flex来表示占多少份数
order: 控制子项目的排列顺序，数值越小的排在越前面，可以为负值，默认是0
align-self: 控制子项自己在侧轴上的排列线
align-self允许单个元素与其他元素不一样的对齐线，可覆盖父级的align-items属性
默认为auto,表示继承父亲的属性,如果父元素没有定义align-items则等于flex-start
