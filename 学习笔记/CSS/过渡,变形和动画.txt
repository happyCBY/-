过渡效果！
transition:要过度的属性 花费的时间 运动的曲线 何时开始

transition-property  规定应用过渡的css属性名称
transition-duration  定义过渡效果花费的时间，默认是0
transition-timing-function :ease(逐渐慢下来)|linear(匀速)|ease-in(加速)|ease-out(减速)|ease-in-out(先加速后减速)  规定过渡效果的时间曲线，默认是"ease"
transition-delay 规定过渡效果何时开始， 默认是0

transition:all transition-duration;所有的元素都会改变




2D变形!!!

水平垂直移动:
transform: translate(x,y) 水平移动x像素，垂直移动y像素
transform: translateX(a) 水平移动
transform: translateY(a) 垂直移动
transform: translate(x%,y%) 注意是以自身的宽度和高度的x%和y%水平以及垂直移动
transform: translate3d(x,y,z) (3D)  x,y轴可以像素或百分比，z轴只能像素移动

设置完美的水平居中对齐:
<style>
position: absolute;
left: 50%;
top: 50%;
transform: translate(-50%,-50%);
</style>

缩放: 2D缩放
scale()的取值默认为1，当值设为0.01~0.99时图像缩小，当值设为1.01以上时图像放大
transform: scale(x,y)使文字水平垂直缩放
transform: scaleX(a) 水平缩放
transform: scaleY(b) 垂直缩放

3D 缩放
transform: scale3d(x,y,z) 3D缩放
注意:
1.当x(y)为负值的时候，会先把盒子的宽(高)缩小到0再放大
2.scale以perspective设置的点为固定点进行缩小和放大，默认为盒子的中心点



设置旋转的中心点:
transform-origin:left|top|right|bottom 是以左，上，右，下四个边框的中心点旋转
transform-origin:left top|right top|left bottom|right bottom 是以左上，右上，左下，右下四个点为旋转点
transform-origin: -200px -200px;  以x轴-200px y轴-200px的点为旋转中心


旋转:2D旋转
rotate(xdeg) deg为度数单位，为正值时顺时针旋转x度，为负值时逆时针旋转x度 (默认以自己最中心点旋转)

旋转: 3D旋转
rotateX(xdeg):沿着自身高度一半为x轴旋转x度
rotateY(ydeg):沿着自身宽度一半为y轴旋转y度
rotateZ(zdeg):沿着z轴旋转z度

rotate3d(x,y,z,wdeg) x,y,z取值为0或1为1是意思你希望绕着x|y|z轴旋转，取零意味着不绕着x|y|z轴旋转,w为旋转的角度

倾斜: 只有2D
skew(xdeg,ydeg) 水平方向上倾斜x度，垂直方向上倾斜y度
skewX(xdeg)	定义沿着 X 轴的 2D 倾斜转换。
skewY(ydeg)	定义沿着 Y 轴的 2D 倾斜转换。

matrix() 方法
matrix() 方法把所有 2D 转换方法组合在一起。
matrix() 方法需要六个参数，包含数学函数，允许您：旋转、缩放、移动以及倾斜元素。
matrix( a, b, c, d, e, f );
a 水平缩放
b 水平倾斜
c 垂直倾斜
d 垂直缩放
e 水平移动
f 垂直移动

！！！！
实行多组变形时:
transform: translate() rotate() scale() skew(); 一定要按顺序写，不然会和你预想的不一样






透视:
原理:进大远小
浏览器透视:把近大远小的所有图像透视到屏幕上
perspective:xpx 视距越大，透视效果越不明显
perspective-origin 属性定义 3D 元素所基于的 X 轴和 Y 轴

backface-visibility 属性定义当元素不面向屏幕时是否可见
backface-visibility:hidden(visible); 图片不是正面的时候隐藏(显示)，默认情况下是显示的

动画！！！！！！！！！！
animation: 动画名称 动画时间 运动曲线 何时开始 播放次数 是否反方向(一般只设置前两个属性)
动画名称是自定义的
animation-name  		    动画名称
animation-duration 		    动画时间

animation-timing-function   运动曲线
值:
linear	动画从头到尾的速度是相同的。
ease	默认。动画以低速开始，然后加快，在结束前变慢。
ease-in	动画以低速开始。
ease-out	动画以低速结束。
ease-in-out	动画以低速开始和结束。
steps(n) 分n步来完成动画


animation-delay				何时开始   注意:设置时间是0也要带单位
animation-iteration-count	播放次数  infinite为无限次播放
animation-direction			是否反方向 alternate反方向播放 normal正常播放(默认)

animation-play-state:paused 暂停动画

animation-fill-mode:forwards 动画播放后停留不回到原点,默认是backwards回到原点

例1:
div{
	width: 100px;
	height: 100px;
	background-color: rgba(0,0,0);
	animation: go 2s ease 0s  infinite alternate;
}
@keyframes go {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(600px);
	}
}

例二:
div{
	width: 100px;
	height: 100px;
	background-color: rgba(0,0,0);
	animation: go 2s ease 0s  infinite alternate;
}
@keyframes go {
	0% {
		transform: translateX(0);
	}
	25% {
		transform: translate(200px,0);
	}
	50% {
		transform: translate(200px,200px);
	}
	75% {
		transform: translate(0,200px);
	}
	100% {
		transform: translate(0,0);
	}
}
