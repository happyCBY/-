交集选择器:
一般第一个为标签选择器，第二个为class选择器，两选择器之间
不能有空格
例如：
h3.red{}
#red.green {} 可以，但不推荐
p#red.green {} 可以，但不推荐



并集选择器:
由各个选择器通过逗号连接而成的，设置不同选择器相同的部分可以用
并集选择器
例如：
h3,.red,#bule{
	color:red;
}




后代选择器：
后代选择器又称包含选择器，用来选择元素或者元素组的后代，其写法就是把外层标签
写在前面，内层标签写在后面，中间用空格分隔。
例如：
.red p{
	color:red;
}




子元素选择器:用于选取父元素的亲孩子,注意当所有孩子没有设置颜色时，选取亲儿子元素孙子元素会继承父元素的颜色
例如:
.one>li{
    color: red;
}
<ul class="one">
	<li>
		<ul>
			<li></li>
		</ul>
	</li>
</ul>





属性选择器:用来选择相同标签里带有特定属性的标签设置样式
例1:
a[title]{
	color:red;
}
<a href="#" title="boy">男孩</a>
<a href="#">男孩</a>
<a href="#">男孩</a>
例2:
input[type = text]{
	color:red;
}
<input type = "text" value="hello world">
<input type = "submit">
<input type = "reast">

例3: font开头和以sb结尾和所有类名里面带有ss的类选择器都选中
div[class^="font"]{
	color:red;
}
div[class$="sb"]{
	color:green;
}
div[class*="ss"]
<div class="font4">属性选择器</div>
<div class="font2"> 属性选择器</div>
<div class="font1"> 属性选择器</div>
<div class="ss-sb"> 属性选择器sb</div>
<div class="cc-sb"> 属性选择器sb</div>
<div class="aa-ss-sb"> 属性选择器sb</div>




伪类选择器: 首先这也是一个选择器，伪类选择器用于向某些选择器添加特殊效果，
为了和类选择器相区别，类选择器是一个点，比如.demo{},而伪类是两个点:link{}


链接伪类选择器: 要按顺序排列写，要不然会出错
:link 未访问的链接
:visited 已访问的链接
:hover 鼠标移动到链接上时
:active 选定的链接


结构伪类选择器:
:first-child:选取父元素的首个子元素的指定选择器
:last-child:选取父元素最好一个子元素的指定选择器
:nth-child(n):选择其指定父元素的第n个子元素的指定选择器
n=even时把偶数序号的子元素选出来
n=odd时把奇数序号的子元素选出来
n=n时把所有子元素都选出来
n=2n,3n时把2的倍数和3的倍数的子元素选出来，以此类推(n从0开始算)(nth-child()括号里可以放表达式,表达式不能以数字开头)
:nth-last-child(n):选择其指定父元素的倒数第n个子元素的指定选择器
和:nth-child(n)正好相反，它是从最后一个算起的
E:first-of-type : 指定类型E的第一个
E:last-of-type : 指定类型E的最后一个
E:nth-of-type(n) : 指定类型E的第n个
注意:
nth-child(2n+1)这样是可以的
nth-child(1+2n)这样是不行的，不能数字打头
:not(:nth-child(2n)) 排除偶数，
:not(:nth-child(4n)) 排除4的倍数



目标伪类选择器:设置当前选中目标的样式
:target{
	color:red;
}
:focus 用于选取获得的焦点元素


伪元素选择器: 权重为0 0 0 1
::first-letter文本中第一个单词或字 元素首字符选定不精确
::first-line 文本第一行
::selection 可改变选中文本的样式

::before ::after 本质上是插入一个元素(标签，盒子)，默认是插入一个inline元素

::before ::after一般用来做小图标或者清除浮动

A::before{
	content: B
}
在A元素或标签里的内容前面加内容B,必须带有content,插入元素是行内元素

A::after{
	content: B
}
在A元素或标签里的内容最后加内容B,必须带有content,插入元素是行内元素
